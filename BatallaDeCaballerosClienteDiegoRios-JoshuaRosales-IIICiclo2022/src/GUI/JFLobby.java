/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Domain.ClienteSingleton;
import Domain.Jugador;
import Utility.GestionXML;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Diego
 */
public class JFLobby extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form JFLobby
     */
    private Jugador jugador;

    public JFLobby(Jugador jugador) {
        this.jugador = jugador;
        initComponents();
        Thread t = new Thread(this);
        t.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            BufferedImage image=ImageIO.read(getClass().getResourceAsStream("/Imagenes/login.png"));
            jDesktopPane1 = new javax.swing.JDesktopPane(){
                public void paintComponent(Graphics g){
                    g.drawImage(image,0,0,this);
                    repaint();
                }
            };
            jMenuBar1 = new javax.swing.JMenuBar();
            jMenu1 = new javax.swing.JMenu();
            jMenu2 = new javax.swing.JMenu();
            jmiListaAmigos = new javax.swing.JMenuItem();
            jmiAgregarAmigos = new javax.swing.JMenuItem();
            jMenu3 = new javax.swing.JMenu();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosing(java.awt.event.WindowEvent evt) {
                    formWindowClosing(evt);
                }
            });

        } catch (IOException ex) {
            Logger.getLogger(JFLobby.class.getName()).log(Level.SEVERE, null, ex);
        }

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        jMenu1.setText("Crear Partida");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Amigos");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu2MousePressed(evt);
            }
        });

        jmiListaAmigos.setText("Lista de amigos");
        jmiListaAmigos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListaAmigosActionPerformed(evt);
            }
        });
        jMenu2.add(jmiListaAmigos);

        jmiAgregarAmigos.setText("Agregar amigos");
        jmiAgregarAmigos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgregarAmigosActionPerformed(evt);
            }
        });
        jMenu2.add(jmiAgregarAmigos);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ranking");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu3MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MousePressed
        JIFRanking jIFRanking = new JIFRanking();
        
        this.jDesktopPane1.add(jIFRanking);
        jIFRanking.setVisible(true);
    }//GEN-LAST:event_jMenu3MousePressed

    private void jMenu2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MousePressed

    }//GEN-LAST:event_jMenu2MousePressed

    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed
        try {
            JPSalaEspera jPSalaEspera = new JPSalaEspera(this.jDesktopPane1, this.jugador);
            JInternalFrame jInternalFrame = new JInternalFrame("Sala de espera");
            jInternalFrame.add(jPSalaEspera);
            jInternalFrame.pack();
            this.jDesktopPane1.add(jInternalFrame);
            jInternalFrame.setVisible(true);
            ClienteSingleton cs = ClienteSingleton.getInstance();
            GestionXML gestionXML = new GestionXML();
            String mensaje = gestionXML.xmlToString(gestionXML.crearMensajeProtocolo("crearPartida"));
            cs.enviarDatos(mensaje);
            System.out.println(this.jugador);
        } catch (IOException ex) {
            Logger.getLogger(JFLobby.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu1MousePressed

    private void jmiListaAmigosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListaAmigosActionPerformed
        JIFAmigos jIFAmigos = new JIFAmigos();
        this.jDesktopPane1.add(jIFAmigos);
        jIFAmigos.setLocation(625, 0);
        jIFAmigos.setVisible(true);
    }//GEN-LAST:event_jmiListaAmigosActionPerformed

    private void jmiAgregarAmigosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgregarAmigosActionPerformed
        JIFAgregarAmigos jIFAgregarAmigos = new JIFAgregarAmigos();
        this.jDesktopPane1.add(jIFAgregarAmigos);

        jIFAgregarAmigos.setVisible(true);
    }//GEN-LAST:event_jmiAgregarAmigosActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ClienteSingleton cs=ClienteSingleton.getInstance();
        GestionXML gestionXML=new GestionXML();
        cs.enviarDatos(gestionXML.xmlToString(gestionXML.crearMensajeProtocolo("cerrar")));
        
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jmiAgregarAmigos;
    private javax.swing.JMenuItem jmiListaAmigos;
    // End of variables declaration//GEN-END:variables

    
    //Este hilo espera informacion del servidor para actualizarla en la interfaz del cliente.
    //como lo puede ser invitaciones a partidas y solicitudes de amistad.
    @Override
    public void run() {
        ClienteSingleton cs = ClienteSingleton.getInstance();
        while (true) {
            try {
                if (cs.isSolicitudAmistad()) {
                    int respuesta = JOptionPane.showConfirmDialog(this, "Te ha llegado una solicitud de amistad de: \n"
                            + cs.getSolicitud() + "\n ¿Deseas Aceptarla?");
                    if (respuesta == 0) {
                        GestionXML gestionXML = new GestionXML();
                        String mensaje = gestionXML.xmlToString(gestionXML.agregarAccionSimple("guardarAmigo", cs.getSolicitud()));
                        cs.enviarDatos(mensaje);
                        JOptionPane.showMessageDialog(this, "Solicitud aceptada");
                    }

                    cs.setSolicitud("");
                    cs.setSolicitudAmistad(false);
                }

                if (cs.isSolicitudPartida()) {
                    int respuesta = JOptionPane.showConfirmDialog(this, "Te ha llegado una invitacion a una partida de: \n"
                            + cs.getInvitacion() + "\n ¿Deseas Aceptarla?");
                    if (respuesta == 0) {
                        GestionXML gestionXML = new GestionXML();
          
                        JOptionPane.showMessageDialog(this, "invitacion aceptada");
                      
                        try {
                           JPSalaEspera jPSalaEspera = new JPSalaEspera(this.jDesktopPane1, this.jugador);
                        
                        JInternalFrame jInternalFrame = new JInternalFrame("Sala de espera");
                        jInternalFrame.add(jPSalaEspera);
                        jInternalFrame.pack();
                        this.jDesktopPane1.add(jInternalFrame);
                        jInternalFrame.setVisible(true);
                        JPSalaEspera.botonInvitar=false;
                         String mensaje = gestionXML.xmlToString(gestionXML.agregarAccionSimple("agregarPartida", cs.getInvitacion()));
                        cs.enviarDatos(mensaje);
                        } catch (IOException ex) {
                            Logger.getLogger(JFLobby.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                    cs.setInvitacion("");
                    cs.setSolicitudPartida(false);
                }

                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(JFLobby.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
}
