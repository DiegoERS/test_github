/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Domain.ClienteSingleton;
import Domain.Jugador;
import Utility.GestionXML;
import Utility.MyUtil;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import org.jdom.Element;

/**
 *
 * @author Diego
 */
public class JPpanelRegistro extends javax.swing.JPanel implements Observer, Runnable {

    /**
     * Creates new form JPpanelRegistro
     */
    private ClienteSingleton clienteSingleton;
    private boolean verificado;
    private boolean hilo;
    private Jugador jugador;
    private BufferedImage[] avatars;
    private Thread thread;
    private BufferedImage fondo;

    public JPpanelRegistro() throws IOException {
        this.verificado = false;
        this.hilo = true;
        this.thread = new Thread(this);
        this.jugador=null;
        clienteSingleton = ClienteSingleton.getInstance();
        clienteSingleton.addObserver(this);
        initComponents();
        this.thread.start();
        this.fondo=ImageIO.read(getClass().getResourceAsStream("/Imagenes/Sesion.png"));
        this.avatars = new BufferedImage[4];
        this.avatars[0] = ImageIO.read(getClass().getResourceAsStream("/Imagenes/Alien.png"));
        this.avatars[1] = ImageIO.read(getClass().getResourceAsStream("/Imagenes/Angel.png"));
        this.avatars[2] = ImageIO.read(getClass().getResourceAsStream("/Imagenes/Soldado.png"));
        this.avatars[3] = ImageIO.read(getClass().getResourceAsStream("/Imagenes/Vikingo.png"));
    }

    @Override
    public void paintComponent(Graphics g) {
        g.drawImage(this.fondo, 0, 0, null);
        for (int i = 0; i < this.avatars.length; i++) {

            g.drawImage(this.avatars[i], 50 + i * 90, 250, null);

        }
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfNombreUsuario = new javax.swing.JTextField();
        jcbJugador1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jbtnJugar = new javax.swing.JButton();
        jtfContrasenia = new javax.swing.JPasswordField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nombre de usuario:");

        jtfNombreUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNombreUsuarioActionPerformed(evt);
            }
        });

        jcbJugador1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alien", "Angel", "Soldado", "Vikingo" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Contrase√±a:");

        jbtnJugar.setText("Jugar");
        jbtnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnJugarActionPerformed(evt);
            }
        });

        jtfContrasenia.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jtfNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbJugador1, 0, 154, Short.MAX_VALUE)
                    .addComponent(jtfContrasenia)
                    .addComponent(jbtnJugar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(jbtnJugar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNombreUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNombreUsuarioActionPerformed

    private void jbtnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnJugarActionPerformed
       
        try {
            GestionXML gestionXML = new GestionXML();
            Element eProtocolo;
            
            try {
                eProtocolo = gestionXML.agregarJugador("autenticar", new Jugador(this.jtfNombreUsuario.getText(),
                        MyUtil.obtenerContraseniaCifrada(String.valueOf(this.jtfContrasenia.getPassword()), MyUtil.MD2),
                        0,
                        this.jcbJugador1.getSelectedIndex()));
                
                clienteSingleton.enviarDatos(gestionXML.xmlToString(eProtocolo));
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(JPpanelRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(JPpanelRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
           

    }//GEN-LAST:event_jbtnJugarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnJugar;
    private javax.swing.JComboBox<String> jcbJugador1;
    private javax.swing.JPasswordField jtfContrasenia;
    private javax.swing.JTextField jtfNombreUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        
        GestionXML gestionXML=new GestionXML();
        Element eProtocolo=(Element) arg;
        
      if (eProtocolo.getChild("dato").getValue().equals("null")) {
        }else{
          this.jugador=gestionXML.xmlAJugador(eProtocolo);
      }
        
        this.verificado = true;
    }

    
    //este hilo verifica que la persona ya haya sido registrarda anteriormente
    @Override
    public void run() {
        while (this.hilo) {
            
            try {
                if (this.verificado) {
                    if (this.jugador!=null) {
                        this.jugador.setNumImagenPerfil(this.jcbJugador1.getSelectedIndex());
                        JFVentanaPrincipal.abierto = false;
                        JFLobby jFLobby = new JFLobby(this.jugador);
                        jFLobby.setLocation(250, 70);
                        jFLobby.setVisible(true);
                        this.hilo=false;
                        JIFRegistroUsuario.hilo=false;
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "Datos invalidos");
                        this.verificado = false;
                    }
                }
                
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(JPpanelRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
}
